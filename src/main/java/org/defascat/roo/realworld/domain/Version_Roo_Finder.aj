// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.defascat.roo.realworld.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.defascat.roo.realworld.domain.Version;

privileged aspect Version_Roo_Finder {
    
    public static TypedQuery<Version> Version.findVersionsByNameLikeOrDescriptionLike(String name, String description) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        name = name.replace('*', '%');
        if (name.charAt(0) != '%') {
            name = "%" + name;
        }
        if (name.charAt(name.length() - 1) != '%') {
            name = name + "%";
        }
        if (description == null || description.length() == 0) throw new IllegalArgumentException("The description argument is required");
        description = description.replace('*', '%');
        if (description.charAt(0) != '%') {
            description = "%" + description;
        }
        if (description.charAt(description.length() - 1) != '%') {
            description = description + "%";
        }
        EntityManager em = Version.entityManager();
        TypedQuery<Version> q = em.createQuery("SELECT o FROM Version AS o WHERE LOWER(o.name) LIKE LOWER(:name)  OR LOWER(o.description) LIKE LOWER(:description)", Version.class);
        q.setParameter("name", name);
        q.setParameter("description", description);
        return q;
    }
    
}
